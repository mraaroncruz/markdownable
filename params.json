{"name":"Markdownable","tagline":"Dynamically adds a markdown version of a field to your ActiveRecord or PORO classes","body":"# Markdownable\r\n![codeship](https://www.codeship.io/projects/463cfc50-e66b-0130-e1e7-62a1cf2e5116/status)\r\nAdds an attribute to your class that is a markdown representation of another attribute.\r\nIncludes auto-include for ActiveRecord\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'markdownable'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install markdownable\r\n\r\n## Usage\r\nWith a Plain Old Ruby ObjectÂ®\r\n\r\n```ruby\r\nrequire 'markdownable'\r\n\r\nclass Article\r\n  include Markdownable\r\n  attr_accessor :title, :author, :body\r\n  markdownable :body\r\nend\r\n\r\narticle = Article.new\r\narticle.body = \"## Hello world\"\r\n# adds a `_markdown` field to any fields you chose above\r\nputs article.body_markdown #=> \"<h2>Hello world</h2>\"\r\n```\r\n\r\nWith ActiveRecord you don't need to include the module\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  markdownable :text\r\nend\r\n\r\narticle = Article.new(:body => \"## Hello World\")\r\narticle.save\r\n# adds a `_markdown` field to any fields you chose above\r\nputs article.text_markdown #=> \"<h2>Hello world</h2>\"\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}